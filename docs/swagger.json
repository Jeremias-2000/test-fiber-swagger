{
    "basePath": "/",
    "securityDefinitions": {
      "teste_scopes": {
        "type": "oauth2",
        "flow": "implicit",
        "authorizationUrl": "https://example.com/oauth/authorize",
        "scopes": {
          "teste_consulta_scope": "TESTE_CONSULTA_API"
        }
      }
    },
    "definitions": {
      "routes.User": {
        "properties": {
          "first_name": {
            "type": "string"
          },
          "id": {
            "description": "this is not the model User, see this as the serializer",
            "type": "integer"
          },
          "last_name": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "host": "http://localhost:3000",
    "info": {
      "contact": {
        "email": "support@swagger.io",
        "name": "API Support",
        "url": "http://www.swagger.io/support"
      },
      "description": "This is a sample server server.",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Fiber Swagger Example API",
      "version": "2.0"
    },
    "paths": {
      "/api/user/:id": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "fetch user",
          "consumes": [
            "*/*"
          ],
          "description": "fetch user registered",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/routes.User"
              }
            }
          },
          "security": [
            {
              "teste_scopes": []
            }
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/user/signin": {
        "post": {
          "consumes": [
            "*/*"
          ],
          "description": "Register a new user",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Created",
              "schema": {
                "$ref": "#/definitions/routes.User"
              }
            }
          },
          "security": [
            {
              "teste_scopes": []
            }
          ],
          "x-codegen-request-body-name": "body",
          "summary": "create user",
          "tags": [
            "user"
          ]
        }
      },
      "/api/user/unsubscribe/:id": {
        "delete": {
          "consumes": [
            "*/*"
          ],
          "description": "delete user registered",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "string"
              }
            }
          },
          "security": [
            {
              "teste_scopes": []
            }
          ],
          "x-codegen-request-body-name": "body",
          "summary": "delete user",
          "tags": [
            "user"
          ]
        }
      },
      "/api/user/update/:id": {
        "put": {
          "consumes": [
            "*/*"
          ],
          "description": "Update user data",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/routes.User"
              }
            }
          },
          "security": [
            {
              "teste_scopes": []
            }
          ],
          "x-codegen-request-body-name": "body",
          "summary": "update user",
          "tags": [
            "user"
          ]
        }
      },
      "/api/users": {
        "get": {
          "consumes": [
            "*/*"
          ],
          "description": "Show the users registered",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "items": {
                  "$ref": "#/definitions/routes.User"
                },
                "type": "array"
              }
            }
          },
          "summary": "Show users",
          "tags": [
            "user"
          ]
        }
      }
    },
    "schemes": [
      "http"
    ],
    "swagger": "2.0"
  }